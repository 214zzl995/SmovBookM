buildscript {
    repositories {
        google()
        mavenCentral()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
    }
    apply from: './dependencies.gradle'
    dependencies {
        classpath 'com.android.tools.build:gradle:7.3.0-rc01'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.7.10"
        classpath "com.google.dagger:hilt-android-gradle-plugin:2.43.2"
    }
}

plugins {
    id 'com.android.application' version '7.3.0-rc01' apply false
    id 'com.android.library' version '7.3.0-rc01' apply false
    id 'org.jetbrains.kotlin.android' version '1.7.10' apply false
    id 'com.diffplug.spotless' version '6.3.0'
    id 'com.autonomousapps.dependency-analysis' version "1.1.0"
}

subprojects {
    repositories {
        google()
        mavenCentral()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
    }

    apply plugin: 'com.diffplug.spotless'
    spotless {
        kotlin {
            target '**/*.kt'
            targetExclude("$buildDir/**/*.kt")
            targetExclude('bin/**/*.kt')
            ktlint("0.45.1").userData([android: "true"])
            licenseHeaderFile rootProject.file('spotless/copyright.kt')
        }
    }

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
        kotlinOptions {
            allWarningsAsErrors = project.hasProperty("warningsAsErrors") ? project.warningsAsErrors : false
            freeCompilerArgs += '-Xopt-in=kotlin.RequiresOptIn'
            freeCompilerArgs += '-Xopt-in=kotlinx.coroutines.ExperimentalCoroutinesApi'
            freeCompilerArgs += '-Xopt-in=kotlinx.coroutines.FlowPreview'
            freeCompilerArgs += '-Xopt-in=kotlin.Experimental'
            freeCompilerArgs += "-Xopt-in=kotlin.time.ExperimentalTime"
            freeCompilerArgs += "-Xopt-in=androidx.compose.animation.ExperimentalAnimationApi"
            freeCompilerArgs += "-Xopt-in=androidx.compose.foundation.ExperimentalFoundationApi"
            freeCompilerArgs += [
                    "-P",
                    "plugin:androidx.compose.compiler.plugins.kotlin:suppressKotlinVersionCompatibilityCheck=true"
            ]
            jvmTarget = "1.8"
        }
    }

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
        /*输出其他错误 */
        /*options.compilerArgs += "-Xlint:deprecation"*/
    }

}